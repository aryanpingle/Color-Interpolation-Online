(()=>{const e="DOC";var t=null;const a="RESv0.0.0";var n=null;String.prototype.endsWithAny=function(...e){return e.some((e=>this.endsWith(e)))};const s=self.registration.scope.includes("127.0.0.1"),i=s,r=(e,t="white")=>s?console.log(`%c${e}`,`color: black; background-color: ${t};`):"";async function c(){t=await caches.open(e),n=await caches.open(a)}async function l(){let n=await caches.keys();await Promise.all(n.map((t=>{if(![e,a].includes(t))return r(`Deleting obsolete cache: '${t}'`,"rgb(255, 128, 128)"),caches.delete(t)}))),t=await caches.open(e),await t.keys().then((e=>Promise.all(e.map((async e=>{if(function(e){let t=e.headers.get("sw-fetched-on");if(!t)return!0;return(new Date).getTime()-parseFloat(t)>=1296e6}(await t.match(e)))return r(`Deleting expired document: ${e.url}`),await t.delete(e)})))))}async function o(e,a){a=a.clone();const n=new Headers(a.headers);n.append("sw-fetched-on",(new Date).getTime());let s=await a.blob();await t.put(e,new Response(s,{status:a.status,statusText:a.statusText,headers:n}))}self.addEventListener("install",(e=>{e.waitUntil((async()=>{await self.skipWaiting()})())})),self.addEventListener("activate",(e=>{r("Service Worker activated"),e.waitUntil((async()=>{await clients.claim(),await Promise.allSettled([c(),l()])})())})),self.addEventListener("fetch",(e=>{e.respondWith(i?fetch(e.request):async function(e){const a=e.request,s=a.url;return null!=t&&null!=n||await c(),s.endsWithAny(".html",".js",".css","/")&&!s.includes("apis.google.com")?await async function(e){const a=e.request;a.url;let n=await t.match(a,{ignoreVary:!0});if(null==n||null==n){r("A cached version DOESN'T exist, performing a network request","rgb(128, 128, 255)");let e=await fetch(a).catch((e=>null));return e&&o(a,e),e}{r("A cached version DOES exist","rgb(128, 128, 255)"),r("Performing network match");const e=5,t=new AbortController,s=t.signal,i=setTimeout((()=>t.abort()),1e3*e);let c=await fetch(a,{signal:s}).then((e=>(clearTimeout(i),r("Network match completed before timeout","rgb(128, 255, 128)"),e))).catch((e=>{if("AbortError"==e.name)return r("Network request took too long, returning cached version","rgb(255, 128, 128)"),null;throw e})).catch((e=>null));return null==c||null==c?n:(o(a,c),c)}}(e):s.includes("apis.google.com")?await fetch(a):await async function(e){const t=e.request;t.url;let a=await n.match(t,{ignoreVary:!0});return null!=a&&null!=a||(a=await fetch(t),n.put(t,a.clone())),a}(e)}(e))})),self.addEventListener("message",(e=>{"version"==e.data&&e.source.postMessage("0.0.0")}))})();